name: Minecraft Server 1.21.5

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  actions: write
  contents: read

# Prevent duplicate runs
concurrency:
  group: mc-server
  cancel-in-progress: true

jobs:
  run-mc-server:
    runs-on: ubuntu-latest
    timeout-minutes: 305

    steps:
    # --- Checkout repo ---
    - name: Checkout repository
      uses: actions/checkout@v4

    # --- Java setup ---
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # --- Required tools ---
    - name: Install utilities
      run: sudo apt-get update && sudo apt-get install -y jq curl unzip docker-compose

    # --- Setup Playit (Docker) ---
    - name: Create docker-compose.yml (Playit agent)
      run: |
        cat > docker-compose.yml <<'EOF'
        version: '3'
        services:
          playit:
            image: ghcr.io/playit-cloud/playit-agent:0.15
            container_name: playit
            restart: unless-stopped
            network_mode: host
            environment:
              - SECRET_KEY=942d4b95533c47f21962214c3dbadf68ecb82c65f8ff033fcb92077d6392f638
        EOF

    - name: Start Playit agent
      run: docker-compose up -d

    # --- Restore server files (if exist) ---
    - name: Download previous server data (if exists)
      uses: actions/download-artifact@v4
      continue-on-error: true
      with:
        name: mc-server-data
        path: mc-server

    # --- Setup Paper server ---
    - name: Prepare Minecraft Server
      run: |
        mkdir -p mc-server/plugins
        cd mc-server
        # Always refresh Paper build if missing
        if [ ! -f server.jar ]; then
          LATEST_BUILD=$(curl -s https://api.papermc.io/v2/projects/paper/versions/1.21.5 | jq -r '.builds[-1]')
          curl -L -o server.jar https://api.papermc.io/v2/projects/paper/versions/1.21.5/builds/$LATEST_BUILD/downloads/paper-1.21.5-$LATEST_BUILD.jar
          echo "eula=true" > eula.txt
        fi
        # Ensure server.properties exists & set offline mode
        if [ ! -f server.properties ]; then
          echo "online-mode=false" > server.properties
        else
          sed -i 's/^online-mode=.*/online-mode=false/' server.properties
        fi

    # --- Run Minecraft server ---
    - name: Start Minecraft Server (5 min then stop)
      run: |
        cd mc-server
        echo "Starting Minecraft server..."
        timeout 300 java -Xms4G -Xmx8G -jar server.jar nogui || true
        echo "Server stopped after 5 minutes."

    # --- Save data ---
    - name: Save full Minecraft Server data
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: mc-server-data
        path: mc-server

    # --- Auto-restart workflow ---
    - name: Restart Workflow
      if: ${{ always() }}
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: Minecraft Server 1.21.5
        ref: main
        token: ${{ secrets.GITHUB_TOKEN }}
